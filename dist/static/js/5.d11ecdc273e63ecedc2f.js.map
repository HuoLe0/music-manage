{"version":3,"sources":["webpack:///src/pages/InfoPage.vue","webpack:///./src/pages/InfoPage.vue?e2d7","webpack:///./src/pages/InfoPage.vue"],"names":["InfoPage","data","consumerCount","songCount","singerCount","songListCount","consumer","consumerSex","columns","rows","性别","总数","options","color","optionA","songStyle","风格","singerSex","location","地区","created","mounted","this","getConsumer","getSong","getSinger","getSongList","methods","_this","Object","api","then","res","length","setSex","sex","val","count","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","value","err","return","_this2","_this3","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","item","getBylocation","_this4","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getByStyle","style","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","includes","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","pages_InfoPage","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","gutter","span","_v","_s","staticStyle","background-color","theme","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/5.d11ecdc273e63ecedc2f.js","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"20\" class=\"mgb20\">\r\n            <el-col :span=\"6\">\r\n                <el-card>\r\n                    <div class=\"grid-content\">\r\n                        <div class=\"grid-cont-center\">\r\n                            <div class=\"grid-num\">{{consumerCount}}</div>\r\n                            <div>用户总数</div>\r\n                        </div>\r\n                    </div>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n                <el-card>\r\n                    <div class=\"grid-content\">\r\n                        <div class=\"grid-cont-center\">\r\n                            <div class=\"grid-num\">{{songCount}}</div>\r\n                            <div>歌曲总数</div>\r\n                        </div>\r\n                    </div>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n                <el-card>\r\n                    <div class=\"grid-content\">\r\n                        <div class=\"grid-cont-center\">\r\n                            <div class=\"grid-num\">{{singerCount}}</div>\r\n                            <div>歌手数量</div>\r\n                        </div>\r\n                    </div>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n                <el-card>\r\n                    <div class=\"grid-content\">\r\n                        <div class=\"grid-cont-center\">\r\n                            <div class=\"grid-num\">{{songListCount}}</div>\r\n                            <div>歌单数量</div>\r\n                        </div>\r\n                    </div>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\" class=\"mgb20\">\r\n            <el-col :span=\"12\">\r\n                <h3 class=\"mgb20\">用户性别比例</h3>\r\n                <div style=\"background-color:white\">\r\n                    <ve-pie :data=\"consumerSex\" :theme=\"options\"></ve-pie>\r\n                </div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <h3 class=\"mgb20\">歌曲类型分布</h3>\r\n                <div style=\"background-color:white\">\r\n                    <ve-histogram :data=\"songStyle\" :theme=\"optionA\"></ve-histogram>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\" class=\"mgb20\">\r\n            <el-col :span=\"12\">\r\n                <h3 class=\"mgb20\">歌手性别比例</h3>\r\n                <div style=\"background-color:white\">\r\n                    <ve-pie :data=\"singerSex\"></ve-pie>\r\n                </div>\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <h3 class=\"mgb20\">歌手地区分布</h3>\r\n                <div style=\"background-color:white\">\r\n                    <ve-histogram :data=\"location\"></ve-histogram>\r\n                </div>\r\n            </el-col>A\r\n        </el-row>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {getAllConsumer,allSong,getAllSinger,getAllSongList} from '../api/index';\r\nexport default {\r\n    data(){\r\n        return {\r\n            consumerCount: 0,       //用户总数\r\n            songCount: 0,           //歌曲总数\r\n            singerCount: 0,         //歌手数量\r\n            songListCount: 0,        //歌单数量\r\n            consumer: [],            //所有用户\r\n            consumerSex:{           //按性别分类的用户数\r\n                columns: ['性别','总数'],\r\n                rows: [\r\n                    {'性别': '男','总数': 0},\r\n                    {'性别': '女','总数': 0}\r\n                ]\r\n            },\r\n            options: {\r\n                color: ['#87cefa','#ffc0cb']\r\n            },\r\n            optionA: {\r\n                color: ['rgb(245, 133, 133)']\r\n            },\r\n            songStyle:{           //按歌单风格分类\r\n                columns: ['风格','总数'],\r\n                rows: [\r\n                    {'风格': '华语','总数': 0},\r\n                    {'风格': '粤语','总数': 0},\r\n                    {'风格': '欧美','总数': 0},\r\n                    {'风格': '日韩','总数': 0},\r\n                    {'风格': 'BGM','总数': 0},\r\n                    {'风格': '轻音乐','总数': 0},\r\n                    {'风格': '乐器','总数': 0},\r\n                    {'风格': 'R&B','总数': 0},\r\n                    {'风格': '影视','总数': 0},\r\n                ]\r\n            },\r\n            singerSex:{           //按性别分类的歌手数\r\n                columns: ['性别','总数'],\r\n                rows: [                    \r\n                    {'性别': '女','总数': 0},\r\n                    {'性别': '男','总数': 0},\r\n                    {'性别': '组合','总数': 0},\r\n                    {'性别': '不明','总数': 0}\r\n                ]\r\n            },\r\n            location:{\r\n                columns: ['地区','总数'],\r\n                rows: [\r\n                    {'地区': '大陆','总数': 0},\r\n                    {'地区': '港澳台','总数': 0},\r\n                    {'地区': '日本','总数': 0},\r\n                    {'地区': '韩国','总数': 0},\r\n                    {'地区': '美国','总数': 0},\r\n                    {'地区': '新加坡','总数': 0},\r\n                    {'地区': '意大利','总数': 0},\r\n                    {'地区': '马来西亚','总数': 0},\r\n                    {'地区': '西班牙','总数': 0}                    \r\n                ]\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {\r\n        this.getConsumer();\r\n        this.getSong();\r\n        this.getSinger();\r\n        this.getSongList();\r\n    },\r\n    methods: {\r\n        getConsumer() {                     //用户总数\r\n            getAllConsumer().then(res => {\r\n                this.consumer = res;\r\n                this.consumerCount = res.length;\r\n                this.consumerSex.rows[0]['总数'] = this.setSex(1,this.consumer);\r\n                this.consumerSex.rows[1]['总数'] = this.setSex(0,this.consumer);\r\n            })\r\n        },  \r\n        setSex(sex,val) {              //根据性别获取用户数\r\n            let count = 0;\r\n            for(let item of val){\r\n                if(sex == item.sex){\r\n                    count++;\r\n                }\r\n            }\r\n            return count;\r\n        },\r\n        getSong() {                      //歌曲总数\r\n            allSong().then(res => {\r\n                this.songCount = res.length;\r\n            })\r\n        },\r\n        getSinger() {                      //歌手数量\r\n            getAllSinger().then(res => {\r\n                this.singerCount = res.length;\r\n                this.singerSex.rows[0]['总数'] = this.setSex(0,res);\r\n                this.singerSex.rows[1]['总数'] = this.setSex(1,res);\r\n                this.singerSex.rows[2]['总数'] = this.setSex(2,res);\r\n                this.singerSex.rows[3]['总数'] = this.setSex(3,res);\r\n                for(let item of res){\r\n                    this.getBylocation(item.location);\r\n                }\r\n            })\r\n        },\r\n\r\n        getSongList() {                    //歌单数量\r\n            getAllSongList().then(res => {\r\n                this.songListCount = res.length;\r\n                for(let item of res){\r\n                    this.getByStyle(item.style);\r\n                }\r\n            })\r\n        },  \r\n        getByStyle(style) {              //根据歌单风格获取数量\r\n            for(let item of this.songStyle.rows){\r\n                if(style.includes(item['风格'])){\r\n                    item['总数']++;\r\n                }\r\n            }\r\n        },\r\n        getBylocation(location) {              //根据地区获取数量\r\n            for(let item of this.location.rows){\r\n                if(location.includes(item['地区'])){\r\n                    item['总数']++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.grid-content {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 50px;\r\n}\r\n\r\n.grid-cont-center {\r\n    flex: 1;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    color: darkgray;\r\n}\r\n\r\n.grid-num {\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/InfoPage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{staticClass:\"mgb20\",attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":6}},[_c('el-card',[_c('div',{staticClass:\"grid-content\"},[_c('div',{staticClass:\"grid-cont-center\"},[_c('div',{staticClass:\"grid-num\"},[_vm._v(_vm._s(_vm.consumerCount))]),_vm._v(\" \"),_c('div',[_vm._v(\"用户总数\")])])])])],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('el-card',[_c('div',{staticClass:\"grid-content\"},[_c('div',{staticClass:\"grid-cont-center\"},[_c('div',{staticClass:\"grid-num\"},[_vm._v(_vm._s(_vm.songCount))]),_vm._v(\" \"),_c('div',[_vm._v(\"歌曲总数\")])])])])],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('el-card',[_c('div',{staticClass:\"grid-content\"},[_c('div',{staticClass:\"grid-cont-center\"},[_c('div',{staticClass:\"grid-num\"},[_vm._v(_vm._s(_vm.singerCount))]),_vm._v(\" \"),_c('div',[_vm._v(\"歌手数量\")])])])])],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('el-card',[_c('div',{staticClass:\"grid-content\"},[_c('div',{staticClass:\"grid-cont-center\"},[_c('div',{staticClass:\"grid-num\"},[_vm._v(_vm._s(_vm.songListCount))]),_vm._v(\" \"),_c('div',[_vm._v(\"歌单数量\")])])])])],1)],1),_vm._v(\" \"),_c('el-row',{staticClass:\"mgb20\",attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('h3',{staticClass:\"mgb20\"},[_vm._v(\"用户性别比例\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"background-color\":\"white\"}},[_c('ve-pie',{attrs:{\"data\":_vm.consumerSex,\"theme\":_vm.options}})],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('h3',{staticClass:\"mgb20\"},[_vm._v(\"歌曲类型分布\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"background-color\":\"white\"}},[_c('ve-histogram',{attrs:{\"data\":_vm.songStyle,\"theme\":_vm.optionA}})],1)])],1),_vm._v(\" \"),_c('el-row',{staticClass:\"mgb20\",attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":12}},[_c('h3',{staticClass:\"mgb20\"},[_vm._v(\"歌手性别比例\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"background-color\":\"white\"}},[_c('ve-pie',{attrs:{\"data\":_vm.singerSex}})],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":12}},[_c('h3',{staticClass:\"mgb20\"},[_vm._v(\"歌手地区分布\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"background-color\":\"white\"}},[_c('ve-histogram',{attrs:{\"data\":_vm.location}})],1)]),_vm._v(\"A\\n    \")],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-77a4703d\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/InfoPage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-77a4703d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./InfoPage.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./InfoPage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./InfoPage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-77a4703d\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./InfoPage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-77a4703d\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/InfoPage.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}